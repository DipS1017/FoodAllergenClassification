// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model User {
  id          Int      @id @default(autoincrement())
  auth0Id     String?  @unique
  email       String   @unique
  username    String   @unique
  password    String?  // nullable for Auth0 users
  phoneNumber String?  @unique // optional field
  gender      Gender
  role        Role     @default(USER) // defaults to user
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relation to the PasswordReset table
  passwordReset PasswordReset[] // A user can have multiple password reset requests
}

model PasswordReset {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  token     String   @unique
  expiresAt DateTime // When the token expires
  createdAt DateTime @default(now())

  // Index to ensure that tokens are unique and to make searches more efficient
  @@index([token])
}

